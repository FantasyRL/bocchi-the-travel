// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/bibi/access_token/get": {
            "get": {
                "description": "get available access-token by refresh-token",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "get_access-token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "refresh-token",
                        "name": "refresh-token",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/avatar/upload": {
            "put": {
                "description": "revise user's avatar",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "PutAvatar",
                "parameters": [
                    {
                        "type": "file",
                        "description": "头像",
                        "name": "avatar_file",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "refresh-token",
                        "name": "refresh-token",
                        "in": "header"
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/info": {
            "get": {
                "description": "get user's info",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "refresh-token",
                        "name": "refresh-token",
                        "in": "header"
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/login/": {
            "post": {
                "description": "login to get your auth token",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "otp",
                        "name": "otp",
                        "in": "query"
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/register/": {
            "post": {
                "description": "userRegister",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Register",
                "parameters": [
                    {
                        "type": "string",
                        "description": "用户名",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "邮箱",
                        "name": "email",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "密码",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/signature": {
            "post": {
                "description": "revise signature",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "signature",
                "parameters": [
                    {
                        "type": "string",
                        "description": "signature",
                        "name": "signature",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "access-token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "refresh-token",
                        "name": "refresh-token",
                        "in": "header"
                    }
                ],
                "responses": {}
            }
        },
        "/bibi/user/switch2fa": {
            "post": {
                "description": "switch on/off 2fa mode",
                "consumes": [
                    "json/form"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "switch_2fa",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "关闭:0;开启:1",
                        "name": "action_type",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "totp",
                        "name": "totp",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "access-token",
                        "name": "access-token",
                        "in": "header"
                    },
                    {
                        "type": "string",
                        "description": "refresh-token",
                        "name": "refresh-token",
                        "in": "header"
                    }
                ],
                "responses": {}
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
